# This serves as a set of sensible defaults to use for query microservice test configuration.  The
# goal here is to avoid creating multiple copies of this file across the various query microservices.
#
# If configured correctly, your microservice will automatically include this profile and it's properties
# as a test resource.  Use the properties contained herein by activatin the QueryStarterDefaults profile.
# If you want to override some of the values present here, create an additional profile and add your
# overrides there.  Make sure your override profile is listed after the QueryStarterDefaults profile.

warehouse:
  accumulo:
    zookeepers: 'localhost:2181'
    instanceName: 'my-instance-01'
    username: 'root'
    password: 'password'
  statsd:
    host: localhost
    port: 8125
  tables:
    shard:
      name: 'shard'
    index:
      name: 'shardIndex'
    reverseIndex:
      name: 'shardReverseIndex'
    dateIndex:
      name: 'dateIndex'
    metadata:
      name: 'DatawaveMetadata'
    model:
      name: 'DatawaveMetadata'
  errorTables:
    shard:
      name: "error_s"
    index:
      name: "error_i"
    reverseIndex:
      name: "error_r"
    dateIndex:
      name: ""
    metadata:
      name: "error_m"
    model:
      name: ""
  defaults:
    queryThreads: 100
    indexLookupThreads: 100
    dateIndexThreads: 20
    fullTableScanEnabled: false
    baseIteratorPriority: 100
    maxIndexScanTimeMillis: 31536000000
    eventPerDayThreshold: 40000
    shardsPerDayThreshold: 20
    maxTermThreshold: 2000
    maxDepthThreshold: 2000
    maxUnfieldedExpansionThreshold: 50
    maxValueExpansionThreshold: 50
    maxOrExpansionThreshold: 500
    maxOrRangeThreshold: 10
    maxOrExpansionFstThreshold: 750
    maxFieldIndexRangeSplit: 16
    maxIvaratorSources: 20
    maxEvaluationPipelines: 16
    maxPipelineCachedResults: 16
    hdfsSiteConfigURLs: 'file:///etc/hadoop/conf/core-site.xml,file:///etc/hadoop/conf/hdfs-site.xml'
    ivaratorFstHdfsBaseURIs: 'hdfs:///IvaratorCache'
    ivaratorCacheBufferSize: 10000
    ivaratorMaxOpenFiles: 100
    ivaratorCacheScanPersistThreshold: 100000
    ivaratorCacheScanTimeoutMinutes: 60
    modelName: 'DATAWAVE'
    edgeModelName: 'DATAWAVE_EDGE'

datawave:
  metadata:
    all-metadata-auths:
      - PRIVATE,PUBLIC
    type-substitutions:
      "[datawave.data.type.DateType]": "datawave.data.type.RawDateType"

  query:
    parser:
      skipTokenizeUnfieldedFields:
        - "DOMETA"
      tokenizedFields:
        - "CONTENT"
    logic:
      factory:
        enabled: true
        # Uncomment the following line to override the query logic beans to load
        # xmlBeansPath: "classpath:TestQueryLogicFactory.xml"

        # The max page size that a user can request.  0 turns off this feature
        maxPageSize: 10000

        # The number of bytes at which a page will be returned, event if the pagesize has not been reached.  0 turns off this feature
        pageByteTrigger: 0
      logics:
        BaseEventQuery:
          checkpointable: true
          accumuloPassword: ${warehouse.accumulo.password}
          tableName: ${warehouse.tables.shard.name}
          dateIndexTableName: ${warehouse.tables.dateIndex.name}
          defaultDateTypeName: "EVENT"
          metadataTableName: ${warehouse.tables.metadata.name}
          indexTableName: ${warehouse.tables.index.name}
          reverseIndexTableName: ${warehouse.tables.reverseIndex.name}
          maxResults: -1
          queryThreads: ${warehouse.defaults.queryThreads}
          indexLookupThreads: ${warehouse.defaults.indexLookupThreads}
          dateIndexThreads: ${warehouse.defaults.dateIndexThreads}
          fullTableScanEnabled: ${warehouse.defaults.fullTableScanEnabled}
          includeDataTypeAsField: false
          disableIndexOnlyDocuments: false
          indexOnlyFilterFunctionsEnabled: false
          includeHierarchyFields: false
          hierarchyFieldOptions:
            "FOO": "BAR"
          baseIteratorPriority: ${warehouse.defaults.baseIteratorPriority}
          maxIndexScanTimeMillis: ${warehouse.defaults.maxIndexScanTimeMillis}
          collapseUids: false
          collapseUidsThreshold: -1
          useEnrichers: true
          contentFieldNames:
            - 'CONTENT'
          realmSuffixExclusionPatterns:
            - '<.*>$'
          minimumSelectivity: .2
          enricherClassNames:
            - 'datawave.query.enrich.DatawaveTermFrequencyEnricher'
          useFilters: false
          filterClassNames:
            - 'foo.bar'
          filterOptions:
            'bar': "foo"
          auditType: "NONE"
          logicDescription: "Retrieve sharded events/documents, leveraging the global index tables as needed"
          eventPerDayThreshold: ${warehouse.defaults.eventPerDayThreshold}
          shardsPerDayThreshold: ${warehouse.defaults.shardsPerDayThreshold}
          maxTermThreshold: ${warehouse.defaults.maxTermThreshold}
          maxDepthThreshold: ${warehouse.defaults.maxDepthThreshold}
          maxUnfieldedExpansionThreshold: ${warehouse.defaults.maxUnfieldedExpansionThreshold}
          maxValueExpansionThreshold: ${warehouse.defaults.maxValueExpansionThreshold}
          maxOrExpansionThreshold: ${warehouse.defaults.maxOrExpansionThreshold}
          maxOrRangeThreshold: ${warehouse.defaults.maxOrRangeThreshold}
          maxOrExpansionFstThreshold: ${warehouse.defaults.maxOrExpansionFstThreshold}
          maxFieldIndexRangeSplit: ${warehouse.defaults.maxFieldIndexRangeSplit}
          maxIvaratorSources: ${warehouse.defaults.maxIvaratorSources}
          maxEvaluationPipelines: ${warehouse.defaults.maxEvaluationPipelines}
          maxPipelineCachedResults: ${warehouse.defaults.maxPipelineCachedResults}
          hdfsSiteConfigURLs: ${warehouse.defaults.hdfsSiteConfigURLs}
          zookeeperConfig: ${warehouse.accumulo.zookeepers}
          ivaratorCacheDirConfigs:
            - basePathURI: "hdfs:///IvaratorCache"
          ivaratorFstHdfsBaseURIs: ${warehouse.defaults.ivaratorFstHdfsBaseURIs}
          ivaratorCacheBufferSize: ${warehouse.defaults.ivaratorCacheBufferSize}
          ivaratorMaxOpenFiles: ${warehouse.defaults.ivaratorMaxOpenFiles}
          ivaratorCacheScanPersistThreshold: ${warehouse.defaults.ivaratorCacheScanPersistThreshold}
          ivaratorCacheScanTimeoutMinutes: ${warehouse.defaults.ivaratorCacheScanTimeoutMinutes}
          eventQueryDataDecoratorTransformer:
            requestedDecorators:
              - "CSV"
              - "WIKIPEDIA"
            dataDecorators:
              "CSV":
                "EVENT_ID": "https://localhost:8443/DataWave/Query/lookupUUID/EVENT_ID?uuid=@field_value@&amp;parameters=data.decorators:CSV"
                "UUID": "https://localhost:8443/DataWave/Query/lookupUUID/UUID?uuid=@field_value@&amp;parameters=data.decorators:CSV"
                "PARENT_UUID": "https://localhost:8443/DataWave/Query/lookupUUID/PARENT_UUID?uuid=@field_value@&amp;parameters=data.decorators:CSV"
              "WIKIPEDIA":
                "PAGE_ID": "https://localhost:8443/DataWave/Query/lookupUUID/PAGE_ID?uuid=@field_value@&amp;parameters=data.decorators:WIKIPEDIA"
                "PAGE_TITLE": "https://localhost:8443/DataWave/Query/lookupUUID/PAGE_TITLE?uuid=@field_value@&amp;parameters=data.decorators:WIKIPEDIA"
          modelTableName: ${warehouse.tables.model.name}
          modelName: ${warehouse.defaults.modelName}
          querySyntaxParsers:
            JEXL: ""
            LUCENE: "LuceneToJexlQueryParser"
            LUCENE-UUID: "LuceneToJexlUUIDQueryParser"
            TOKENIZED-LUCENE: "TokenizedLuceneToJexlQueryParser"
          sendTimingToStatsd: false
          collectQueryMetrics: true
          logTimingDetails: false
          statsdHost: ${warehouse.statsd.host}
          statsdPort: ${warehouse.statsd.port}
          evaluationOnlyFields: ""
          maxConcurrentTasks: 10
          requiredRoles:
            - "AuthorizedUser"

        DiscoveryQuery:
          checkpointable: true
          tableName: ${warehouse.tables.shard.name}
          indexTableName: ${warehouse.tables.index.name}
          reverseIndexTableName: ${warehouse.tables.reverseIndex.name}
          metadataTableName: ${warehouse.tables.metadata.name}
          modelTableName: ${warehouse.tables.model.name}
          modelName: ${warehouse.defaults.modelName}
          fullTableScanEnabled: ${warehouse.defaults.fullTableScanEnabled}
          allowLeadingWildcard: true
          auditType: "NONE"
          maxResults: -1
          maxWork: -1

        LuceneUUIDEventQuery:
          logicDescription: "Composite query logic that retrieves records from the event and error tables, based on known UUID fields, ie, those configured via UUIDTypeList in QueryLogicFactory.xml"
          auditType: "NONE"
          eventQuery:
            auditType: "NONE"
            logicDescription: "Lucene query for event/document UUIDs"
            mandatoryQuerySyntax: "LUCENE-UUID"
            connPoolName: "UUID"
          errorEventQuery:
            auditType: "NONE"
            logicDescription: "Lucene query for event/document UUIDs for events that encountered errors at ingest time"
            mandatoryQuerySyntax: "LUCENE-UUID"
            connPoolName: "UUID"
            tableName: ${warehouse.errorTables.shard.name}
            dateIndexTableName: ${warehouse.errorTables.dateIndex.name}
            metadataTableName: ${warehouse.errorTables.metadata.name}
            indexTableName: ${warehouse.errorTables.index.name}
            reverseIndexTableName: ${warehouse.errorTables.reverseIndex.name}

        ContentQuery:
          tableName: ${warehouse.tables.shard.name}
          maxResults: -1
          maxWork: -1
          auditType: "NONE"
          logicDescription: "Query that returns a document given the document identifier"

        EdgeQuery:
          checkpointable: true
          tableName: ${warehouse.tables.shard.name}
          metadataTableName: ${warehouse.tables.metadata.name}
          modelTableName: ${warehouse.tables.model.name}
          modelName: ${warehouse.defaults.edgeModelName}
          queryThreads: 16
          auditType: "NONE"
          maxResults: 25000
          maxWork: -1

    lookup:
      columnVisibility: ""
      beginDate: "20100101 000000.000"
      types:
        'EVENT_ID':
          fieldName: 'EVENT_ID'
          queryLogic: 'LuceneUUIDEventQuery'
          allowedWildcardAfter: 28
        'UUID':
          fieldName: 'UUID'
          queryLogic: 'LuceneUUIDEventQuery'
        'PARENT_UUID':
          fieldName: 'PARENT_UUID'
          queryLogic: 'LuceneUUIDEventQuery'
        'PAGE_ID':
          fieldName: 'PAGE_ID'
          queryLogic: 'LuceneUUIDEventQuery'
        'PAGE_TITLE':
          fieldName: 'PAGE_TITLE'
          queryLogic: 'LuceneUUIDEventQuery'

    edge:
      # Uncomment the following line to override the edge beans to load
      # xmlBeansPath: "classpath:EdgeBeans.xml"
      model:
        baseFieldMap:
          EDGE_SOURCE: 'SOURCE'
          EDGE_SINK: 'SINK'
          EDGE_TYPE: 'TYPE'
          EDGE_RELATIONSHIP: 'RELATION'
          EDGE_ATTRIBUTE1: 'ATTRIBUTE1'
          EDGE_ATTRIBUTE2: 'ATTRIBUTE2'
          EDGE_ATTRIBUTE3: 'ATTRIBUTE3'
          DATE: 'DATE'
          STATS_EDGE: 'STATS_TYPE'
        keyUtilFieldMap:
          ENRICHMENT_TYPE: 'ENRICHMENT_TYPE'
          FACT_TYPE: 'FACT_TYPE'
          GROUPED_FIELDS: 'GROUPED_FIELDS'
        transformFieldMap:
          COUNT: 'COUNT'
          COUNTS: 'COUNTS'
          LOAD_DATE: 'LOADDATE'
          ACTIVITY_DATE: 'ACTIVITY_DATE'

query:
  messaging:
    claimCheck:
      enabled: false

audit-client:
  discovery:
    enabled: false
  uri: '${AUDIT_SERVER_URL:http://localhost:11111/audit}'
